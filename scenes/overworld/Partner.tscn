[gd_scene load_steps=20 format=3 uid="uid://hdas3iby8cfh"]

[ext_resource type="SpriteFrames" uid="uid://vl86ebo8mlug" path="res://textures/goombario/_frames.tres" id="1"]
[ext_resource type="Texture2D" uid="uid://bypqjr5tfblsu" path="res://particles/dirt_02.png" id="2_mur2f"]
[ext_resource type="Script" path="res://scripts/overworld/WaterParticles.gd" id="3_xkn2y"]
[ext_resource type="Texture2D" uid="uid://chrwhnjtqyfyc" path="res://particles/circle_01.png" id="4_ct0uj"]

[sub_resource type="GDScript" id="1"]
script/source = "extends CharacterBody3D

# constants
@export var speed: float = 2.5
@export var gravity: float = 15
@export var jump_power: float = 5

var player

var target = Vector3.ZERO
var spriteRotation = 0
var timeSinceRest = 250
var timeSinceWalk = 0
var last_time_was_grounded = true
var jump_attempts = 0
var lastTarget = Vector3.ZERO
var paused = false
var is_in_water = false

func enter_water(_y_position):
	is_in_water = true
	$WaterParticles.play()

func exit_water(_y_position):
	is_in_water = false
	$WaterParticles.play()

func _physics_process(delta):
	if paused:
		return
	var shouldSnap = true
	
	if is_on_floor():
		last_time_was_grounded = true
		
		if not is_on_wall():
			jump_attempts = 0
	else:
		if last_time_was_grounded and target.y > position.y:
			velocity.y += jump_power
		last_time_was_grounded = false
		
	if is_on_wall() and is_on_floor():
		if jump_attempts < 3:
			jump_attempts += 1
		velocity.y += jump_power * jump_attempts * .333
		shouldSnap = false
		last_time_was_grounded = false
	
	var goalDirection = Vector2(target.x, target.z) - Vector2(global_transform.origin.x, global_transform.origin.z)
	
	# reset position
	if timeSinceRest > 300 or position.y < -10:
		var space = get_world_3d().direct_space_state
		var query = PhysicsRayQueryParameters3D.create(target, target - Vector3(0,1,0))
		var collision = space.intersect_ray(query)
		
		if collision:
			position = target
			position.y += .5
		else:
			visible = false
	else:
		visible = true
	
	if goalDirection.length() > 0.15 or (spriteRotation != 0 and spriteRotation != 180):
		timeSinceWalk = 0
		if goalDirection.length() > 1.5:
			goalDirection = goalDirection.normalized() * speed * 2
		else:
			goalDirection = goalDirection.normalized() * speed
		velocity = Vector3(goalDirection.x, velocity.y, goalDirection.y)
			
		if is_in_water:
			$AnimatedSprite3D.play(\"Swim\")
		else:
			$AnimatedSprite3D.play(\"Walk\")
		if goalDirection.x > -0.01:
			if spriteRotation < 180:
				spriteRotation = min(180, spriteRotation + delta * 2000)
		elif goalDirection.x < 0.01:
			if spriteRotation > 0:
				spriteRotation = max(0, spriteRotation - delta * 2000)
		timeSinceRest += 1
	else:
		velocity.x = 0
		velocity.z = 0
		timeSinceRest = 0
		timeSinceWalk += 1
		if timeSinceWalk > 10:
			if is_in_water:
				$AnimatedSprite3D.play(\"Swim\")
			else:
				$AnimatedSprite3D.play(\"Rest\")
	
	velocity.y -= gravity * delta
	if shouldSnap:
		set_velocity(velocity)
		# TODOConverter40 looks that snap in Godot 4.0 is float, not vector like in Godot 3 - previous value `Vector3(0,-.1,0)`
		set_up_direction(Vector3(0,1,0))
		set_floor_stop_on_slope_enabled(false)
		set_max_slides(4)
		set_floor_max_angle(PI/4)
		# TODOConverter40 infinite_inertia were removed in Godot 4.0 - previous value `false`
		move_and_slide()
		velocity = velocity
	else:
		set_velocity(velocity)
		set_up_direction(Vector3(0,1,0))
		set_floor_stop_on_slope_enabled(false)
		set_max_slides(4)
		set_floor_max_angle(PI/4)
		# TODOConverter40 infinite_inertia were removed in Godot 4.0 - previous value `false`
		move_and_slide()
		velocity = velocity
	$AnimatedSprite3D.rotation_degrees.y = -spriteRotation
	
func _process(_delta):
	if paused:
		return
	lastTarget = target
	target = player.position
	var last_v = Vector2(player.last_significant_velocity.x, player.last_significant_velocity.z)
	if last_v.length() == 0:
		last_v = Vector2(1,1)
	last_v = Vector3(last_v.x, 0, last_v.y)
	target -= last_v.normalized() * .5
	target = target
	if((lastTarget - target).length() > .1):
		timeSinceRest = 0

func pass_player(p_player):
	player = p_player

func _on_pause():
	paused = true

func _on_unpause():
	paused = false
"

[sub_resource type="CylinderShape3D" id="2"]
height = 0.417045
radius = 0.171256

[sub_resource type="CylinderMesh" id="3"]
top_radius = 0.2
bottom_radius = 0.2
height = 0.01

[sub_resource type="Curve" id="Curve_472pq"]
_data = [Vector2(0, 0.106818), 0.0, 0.0, 0, 0, Vector2(0.501754, 0.978947), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="CurveTexture" id="20"]
curve = SubResource("Curve_472pq")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_6kncv"]
direction = Vector3(0, 1, 0)
spread = 90.0
flatness = 0.47
gravity = Vector3(0, -2, 0)
initial_velocity_min = 1.0
initial_velocity_max = 1.0
scale_min = 0.8
scale_max = 0.8
scale_curve = SubResource("20")
color = Color(0.223529, 0.223529, 0.223529, 0.372549)

[sub_resource type="StandardMaterial3D" id="22"]
transparency = 1
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_texture = ExtResource("2_mur2f")
billboard_mode = 3
billboard_keep_scale = true
particles_anim_h_frames = 1
particles_anim_v_frames = 1
particles_anim_loop = false

[sub_resource type="QuadMesh" id="QuadMesh_6ganv"]
material = SubResource("22")

[sub_resource type="Gradient" id="Gradient_noc6c"]
offsets = PackedFloat32Array(0, 0.369697, 0.836364, 0.878788)
colors = PackedColorArray(1, 1, 1, 0.560784, 1, 1, 1, 0.0431373, 1, 1, 1, 0, 1, 1, 1, 0)

[sub_resource type="GradientTexture2D" id="25"]
gradient = SubResource("Gradient_noc6c")

[sub_resource type="Curve" id="Curve_dh7ct"]
_data = [Vector2(0, 0.0693182), 0.0, 0.705929, 0, 0, Vector2(0.989362, 0.969318), -0.142424, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="27"]
curve = SubResource("Curve_dh7ct")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_h53h5"]
gravity = Vector3(0, 0, 0)
scale_curve = SubResource("27")
color_ramp = SubResource("25")

[sub_resource type="StandardMaterial3D" id="29"]
transparency = 1
shading_mode = 0
vertex_color_use_as_albedo = true
albedo_texture = ExtResource("4_ct0uj")
billboard_mode = 2
billboard_keep_scale = true

[sub_resource type="QuadMesh" id="QuadMesh_50wek"]
material = SubResource("29")
orientation = 1

[node name="Partner" type="CharacterBody3D" groups=["rotate_with_camera"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.322397, 0)
collision_layer = 2147483652
collision_mask = 4
script = SubResource("1")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.121313, 0)
shape = SubResource("2")

[node name="AnimatedSprite3D" type="AnimatedSprite3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0529238, 0)
layers = 1025
cast_shadow = 0
pixel_size = 0.0117
alpha_cut = 1
texture_filter = 0
sprite_frames = ExtResource("1")
animation = &"Victory"
frame = 2

[node name="Shadow" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.154659, 0.0893218)
cast_shadow = 3
mesh = SubResource("3")

[node name="WaterParticles" type="GPUParticles3D" parent="."]
emitting = false
amount = 16
lifetime = 0.8
speed_scale = 2.0
process_material = SubResource("ParticleProcessMaterial_6kncv")
draw_pass_1 = SubResource("QuadMesh_6ganv")
script = ExtResource("3_xkn2y")

[node name="Circles" type="GPUParticles3D" parent="WaterParticles"]
transform = Transform3D(1, 0, 0, 0, 2.98023e-08, 1, 0, -1, 2.98023e-08, 0.0100566, 0.0906274, -0.0696199)
emitting = false
amount = 60
lifetime = 1.36
speed_scale = 0.75
process_material = SubResource("ParticleProcessMaterial_h53h5")
draw_pass_1 = SubResource("QuadMesh_50wek")
